[package]
name = "qdrant"
version = "1.9.1-dev"
authors = [
    "Andrey Vasnetsov <andrey@vasnetsov.com>",
    "Qdrant Team <info@qdrant.tech>",
]
readme = "README.md"
homepage = "https://qdrant.tech/"
repository = "https://github.com/qdrant/qdrant"
license = "Apache-2.0"
edition = "2021"
rust-version = "1.77"
default-run = "qdrant"

[features]
default = ["web", "parking_lot", "issues"]
web = ["actix-web"]
multiling-chinese = ["segment/multiling-chinese"]
multiling-japanese = ["segment/multiling-japanese"]
multiling-korean = ["segment/multiling-korean"]
service_debug = ["parking_lot", "parking_lot/deadlock_detection"]
tracing = [
    "api/tracing",
    "collection/tracing",
    "segment/tracing",
    "storage/tracing",
]
console = ["console-subscriber"]
console-subscriber = ["tracing", "dep:console-subscriber"]
tracy = ["tracing-tracy"]
tracing-tracy = ["tracing", "dep:tracing-tracy"]
tokio-tracing = ["tokio/tracing"]
stacktrace = ["rstack-self"]
chaos-testing = []
issues = []

[dev-dependencies]
serde_urlencoded = "0.7"
sealed_test = "1.0.0"

tempfile = "3.10.1"
rusty-hook = "^0.11.2"


[dependencies]
parking_lot = { workspace = true, optional = true }

thiserror = "1.0"
log = "0.4"
colored = "2"
serde = { workspace = true }
serde_json = { workspace = true }
chrono = { workspace = true }
rand = "0.8.5"
schemars = { workspace = true }
itertools = "0.12"
anyhow = "1.0.82"
futures = { workspace = true }
futures-util = { workspace = true }
clap = { version = "4.5.4", features = ["derive"] }
serde_cbor = { workspace = true }
uuid = { workspace = true }
sys-info = "0.9.1"
wal = { workspace = true }

config = "~0.14.0"

tokio = { workspace = true }

actix-cors = "0.7.0"
actix-files = "0.6.5"
actix-web = { version = "4.5.1", optional = true, features = ["rustls-0_22", "actix-tls"] }
actix-web-validator = "5.0.1"
tonic = { workspace = true }
tonic-reflection = { workspace = true }
tower = { version = "0.4.13" }
tower-layer = "0.3.2"
reqwest = { workspace = true }
# rustls minor version must be synced with actix-web
rustls = "0.22.4"
rustls-pki-types = "1.4.1"
rustls-pemfile = "2.1.2"
prometheus = { version = "0.13.3", default-features = false }
validator = { workspace = true }
jsonwebtoken = "9.3.0"

# Consensus related crates
raft = { version = "0.7.0", features = ["prost-codec"], default-features = false }
slog = { version = "2.7.0", features = ["max_level_trace", "release_max_level_debug"] }
slog-stdlog = "4.1.1"
prost = { workspace = true }
raft-proto = { version = "0.7.0", features = ["prost-codec"], default-features = false }

common = { path = "lib/common/common" }
cancel = { path = "lib/common/cancel" }
memory = { path = "lib/common/memory" }
issues = { path = "lib/common/issues" }
segment = { path = "lib/segment" }
collection = { path = "lib/collection" }
storage = { path = "lib/storage" }
api = { path = "lib/api" }
actix-multipart = "0.6.1"
constant_time_eq = "0.3.0"

# Profiling
tracing = { workspace = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-log = { version = "0.2", default-features = false, features = ["log-tracer", "std"] }
console-subscriber = { version = "0.1", default-features = false, features = ["parking_lot"], optional = true }
tracing-tracy = { version = "0.11.0", features = ["ondemand"], optional = true }
actix-web-extras = "0.1.0"

# Backtrace
[target.'cfg(target_os = "linux")'.dependencies]
rstack-self = { version = "0.3.0", optional = true }

[target.'cfg(all(not(target_env = "msvc"), any(target_arch = "x86_64", target_arch = "aarch64")))'.dependencies]
tikv-jemallocator = "0.5"

[workspace.dependencies]
chrono = { version = "0.4.38", features = ["serde"] }
fnv = "1.0"
futures = "0.3.30"
futures-util = "0.3.30"
indexmap = { version = "2", features = ["serde"] }
parking_lot = { version = "0.12.1", features = ["deadlock_detection", "serde"] }
prost = "0.11.9"
prost-wkt-types = "0.4.2"
reqwest = { version = "0.12.4", default-features = false, features = ["http2", "stream", "rustls-tls", "blocking"] }
schemars = { version = "0.8.16", features = ["uuid1", "preserve_order", "chrono", "url", "indexmap2"] }
semver = { version = "1.0", features = ["serde"] }
serde = { version = "~1.0", features = ["derive", "rc"] }
serde_cbor = { version = "0.11.2" }
serde_json = "~1.0"
strum = { version = "0.26.2", features = ["derive"] }
tar = "0.4.40"
tokio = { version = "1.37.0", features = ["full"] }
tokio-util = "0.7"
tonic = { version = "0.9.2", features = ["gzip", "tls"] }
tonic-reflection = "0.9.2"
tracing = { version = "0.1", features = ["async-await"] }
uuid = { version = "1.8", features = ["v4", "serde"] }
validator = { version = "0.16.1", features = ["derive"] }
wal = { git = "https://github.com/qdrant/wal.git", rev = "a7870900f29811a24e20882887d60e6a2febf945" }

[[bin]]
name = "schema_generator"
path = "src/schema_generator.rs"
test = false
bench = false

[[bin]]
name = "wal_inspector"
path = "src/wal_inspector.rs"
test = false
bench = false

[workspace]
members = [
    "lib/api",
    "lib/collection",
    "lib/common/*",
    "lib/segment",
    "lib/sparse",
    "lib/storage",
]

[profile.release]
lto = "fat"
codegen-units = 1

# Inherit from release, because we are not rebuilding often,
# and we don't want the huge binary sizes from debug builds.
[profile.ci]
inherits = "release"
lto = false
opt-level = 0

# Inherits by default from release
[profile.bench]
lto = false
debug = true
codegen-units = 256 # restore default value for faster compilation

# Profile for performance testing, which is faster to build than release.
[profile.perf]
inherits = "release"
lto = false
opt-level = 3

[patch.crates-io]
# Temporary patch until <https://github.com/hyperium/tonic/pull/1401> is merged
tonic = { git = 'https://github.com/qdrant/tonic', branch = "v0.9.2-patched" }
